{"version":3,"sources":["logo.svg","components/header.jsx","components/tabletoolbar.jsx","components/LeaderboardTable.jsx","components/Leaderboard.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","styles","root","backgroundColor","color","Header","state","react_default","a","createElement","AppBar_default","style","position","Toolbar_default","Typography_default","variant","Component","display","flexGrow","width","button","float","margin","marginBottom","marginLeft","TableToolbar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","console","log","Button_default","onClick","openAdd","Add_default","table","marginTop","fontFamily","deleteButton","borderColor","LeaderboardTable","myProps","_this2","es","defaultPageSize","defaultSorted","id","desc","sortable","defaultSortMethod","b","undefined","Infinity","toLowerCase","className","data","columns","accessor","show","Cell","value","edit","delete","alignItems","paper","height","padding","modalPaper","left","top","marginRight","textAlign","outline","Leaderboard","open","setState","handleClose","editing","firstName","leaderboardData","lastName","score","addNewPerson","update","add","handleChange","e","preventDefault","defineProperty","target","name","header","Paper_default","Grid_default","container","spacing","item","xs","tabletoolbar","components_LeaderboardTable","Modal_default","aria-labelledby","aria-describedby","onClose","index_es","component","noValidate","autoComplete","TextField_default","label","onChange","type","App","handleDelete","filter","handleUpdate","handleAdd","concat","toConsumableArray","length","components_Leaderboard","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1a9d40ee.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst styles = {\n  root: {\n    backgroundColor: \"#F1373D\",\n    color: \"white\"\n  }\n};\nclass Header extends Component {\n  state = {};\n  render() {\n    return (\n      <AppBar style={styles.root} position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h6\" color=\"inherit\">\n            PGA Leaderboard\n          </Typography>\n        </Toolbar>\n      </AppBar>\n    );\n  }\n}\n\nexport default Header;\n","import React, { Component } from \"react\";\nimport Fab from \"@material-ui/core/Fab\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Icon from \"@material-ui/core/Icon\";\nimport Button from \"@material-ui/core/Button\";\n\nconst styles = {\n  root: {\n    display: \"inline\",\n    flexGrow: 1,\n    width: \"100%\"\n  },\n\n  button: {\n    float: \"right\",\n    margin: \"20px\",\n    marginBottom: \"0px\",\n    marginLeft: \"auto\",\n    backgroundColor: \"#003c80\",\n    color: \"white\"\n  }\n};\n\nclass TableToolbar extends Component {\n  state = {};\n  constructor(props) {\n    super(props);\n    console.log(props);\n  }\n  render() {\n    return (\n      <div style={styles.root}>\n        <Button\n          style={styles.button}\n          onClick={this.props.openAdd}\n          variant=\"contained\"\n          \n        >\n          Add\n          <AddIcon />\n        </Button>\n      </div>\n    );\n  }\n}\n\nexport default TableToolbar;\n","import React, { Component } from \"react\";\nimport ReactTable from \"react-table\";\nimport \"react-table/react-table.css\";\nimport Button from \"@material-ui/core/Button\";\n\nconst styles = {\n  table: {\n    margin: \"40px\",\n    marginTop: \"10px\",\n    fontFamily: \"Roboto\"\n  },\n  deleteButton: {\n    borderColor: \"#F1373D\"\n  }\n};\n\nclass LeaderboardTable extends Component {\n  state = {};\n  constructor(props) {\n    super(props);\n    this.myProps = props;\n  }\n  render() {\n    return (\n      <ReactTable\n        style={styles.table}\n        defaultPageSize={15}\n        defaultSorted={[\n          {\n            id: \"lastName\",\n            desc: false\n          },\n          {\n            id: \"score\",\n            desc: false\n          }\n        ]}\n        sortable\n        defaultSortMethod={(a, b, desc) => {\n          // force null and undefined to the bottom\n          a = a === null || a === undefined ? -Infinity : a;\n          b = b === null || b === undefined ? -Infinity : b;\n          // force any string values to lowercase\n          a = typeof a === \"string\" ? a.toLowerCase() : a;\n          b = typeof b === \"string\" ? b.toLowerCase() : b;\n          // Return either 1 or -1 to indicate a sort priority\n          console.log(a);\n          if (a > b) {\n            return 1;\n          }\n          if (a < b) {\n            return -1;\n          }\n\n          // returning 0 or undefined will use any subsequent column sorting methods or the row index as a tiebreaker\n          return 0;\n        }}\n        className=\"-striped -highlight\"\n        data={this.props.data}\n        columns={[\n          {\n            Header: \"Lastname\",\n            accessor: \"lastName\",\n            show: false\n          },\n          {\n            Header: \"Name\",\n            accessor: \"name\"\n          },\n          {\n            Header: \"Score\",\n            accessor: \"score\",\n            Cell: props => <span className=\"number\">{props.value}</span> // Custom cell components!\n          },\n          {\n            Header: \"Edit\",\n            accessor: \"id\",\n            Cell: props => (\n              <Button\n                style={styles.button}\n                onClick={() => {\n                  this.myProps.edit(props.value);\n                }}\n                variant=\"outlined\"\n              >\n                Edit\n              </Button>\n            ) // Custom cell components!\n          },\n          {\n            Header: \"Delete\",\n            accessor: \"id\",\n            Cell: props => (\n              <Button\n                onClick={() => {\n                  this.myProps.delete(props.value);\n                }}\n                color=\"secondary\"\n                variant=\"outlined\"\n              >\n                Delete\n              </Button>\n            ) // Custom cell component to delete a row!\n          }\n        ]}\n      />\n    );\n  }\n}\n\nexport default LeaderboardTable;\n","import React, { Component } from \"react\";\nimport Header from \"./header\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { Typography } from \"@material-ui/core\";\nimport TableToolbar from \"./tabletoolbar\";\nimport LeaderboardTable from \"./LeaderboardTable\";\nimport Modal from \"@material-ui/core/Modal\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport AddIcon from \"@material-ui/icons/Add\";\n\nconst styles = {\n  root: {\n    flexGrow: 1,\n    alignItems: \"center\"\n  },\n  paper: {\n    height: \"100%\",\n    width: \"80%\",\n    padding: \"50px\",\n    margin: \"0 auto\",\n    marginTop: \"30px\"\n  },\n  modalPaper: {\n    flexGrow: 1,\n    position: \"absolute\",\n    width: \"30%\",\n    left: \"60%\",\n    top: \"20%\",\n    marginLeft: \"-320px\",\n    marginRight: \"-150px\",\n    backgroundColor: \"white\",\n    textAlign: \"center\",\n    padding: \"20px\",\n    outline: \"none\"\n  },\n  button: {\n    backgroundColor: \"#003c80\",\n    color: \"white\"\n  }\n};\n\nclass Leaderboard extends Component {\n  state = { open: false };\n  constructor(props) {\n    super(props);\n    console.log(props);\n  }\n\n  \n  openAdd = () => {\n    this.setState({ open: true });\n  };\n\n  handleClose = () => {\n    this.setState({ open: false });\n  };\n\n  edit = id => {\n    this.setState({ open: true });\n    this.setState({ editing: true });\n    this.setState({ firstName: this.props.leaderboardData[id - 1].firstName });\n    this.setState({ lastName: this.props.leaderboardData[id - 1].lastName });\n    this.setState({ score: this.props.leaderboardData[id - 1].score });\n    this.setState({ id: id });\n  };\n  addNewPerson = () => {\n    if (!this.state.editing) {\n      this.props.add(\n        this.state.firstName,\n        this.state.lastName,\n        this.state.score\n      );\n      this.handleClose();\n      this.setState({ firstName: \"\" });\n      this.setState({ lastName: \"\" });\n      this.setState({ score: \"\" });\n    } else {\n      this.props.update(\n        this.state.firstName,\n        this.state.lastName,\n        this.state.score,\n        this.state.id\n      );\n      this.handleClose();\n      this.setState({ firstName: \"\" });\n      this.setState({ lastName: \"\" });\n      this.setState({ score: \"\" });\n    }\n  };\n\n  handleChange = e => {\n    e.preventDefault();\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  render() {\n    return (\n      <div>\n        <Header />\n        <Paper style={styles.paper}>\n          <Grid style={styles.root} container spacing={24}>\n            <Grid item xs={12}>\n              <TableToolbar openAdd={this.openAdd} />\n            </Grid>\n            <Grid item xs={12}>\n              <LeaderboardTable\n                data={this.props.leaderboardData}\n                delete={this.props.delete}\n                edit={this.edit}\n              />\n            </Grid>\n          </Grid>\n        </Paper>\n        <Modal\n          aria-labelledby=\"simple-modal-title\"\n          aria-describedby=\"simple-modal-description\"\n          open={this.state.open}\n          onClose={this.handleClose}\n        >\n          <Paper style={styles.modalPaper}>\n            <Typography component=\"h2\" variant=\"h5\">\n              Add New Player\n            </Typography>\n            <form noValidate autoComplete=\"off\">\n              <TextField\n                id=\"firstName\"\n                label=\"First Name\"\n                margin=\"normal\"\n                onChange={this.handleChange}\n                variant=\"outlined\"\n                value={this.state.firstName}\n                name=\"firstName\"\n              />\n              <TextField\n                id=\"lastName\"\n                label=\"Last Name\"\n                margin=\"normal\"\n                name=\"lastName\"\n                onChange={this.handleChange}\n                variant=\"outlined\"\n                value={this.state.lastName}\n              />\n              <TextField\n                id=\"score\"\n                label=\"Score\"\n                type=\"number\"\n                margin=\"normal\"\n                onChange={this.handleChange}\n                variant=\"outlined\"\n                name=\"score\"\n                value={this.state.score}\n              />\n            </form>\n            <Button\n              style={styles.button}\n              onClick={this.addNewPerson}\n              variant=\"contained\"\n              type=\"submit\"\n            >\n              Submit\n            </Button>\n          </Paper>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default Leaderboard;\n","import React, { Component } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Leaderboard from \"./components/Leaderboard\";\n\nclass App extends Component {\n  state = {\n    data: []\n  };\n  handleDelete = id => {\n    this.setState({\n      data: this.state.data.filter(item => {\n        return item.id != id;\n      })\n    });\n  };\n\n  handleUpdate = (firstName, lastName, score, id) => {\n    this.state.data[id - 1].firstName = firstName;\n    this.state.data[id - 1].lastName = lastName;\n    this.state.data[id - 1].score = score;\n    this.state.data[id - 1].name = lastName + \",\" + firstName;\n  };\n  handleAdd = (firstName, lastName, score) => {\n    this.setState({\n      data: [\n        ...this.state.data,\n        {\n          id: this.state.data.length + 1,\n          name: lastName + \",\" + firstName,\n          firstName,\n          lastName,\n          score\n        }\n      ]\n    });\n  };\n  render() {\n    return (\n      <div className=\"App\">\n        <Leaderboard\n          leaderboardData={this.state.data}\n          add={this.handleAdd}\n          delete={this.handleDelete}\n          update={this.handleUpdate}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"typeface-roboto\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}